# 游戏：猜数字游戏

```elixir
Mix.install([
  {:jason, "~> 1.4"},
  {:kino, "~> 0.9", override: true},
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"}
])
```

## 导航

<div style="display: flex; align-items: center; width: 100%; justify-content: space-between; font-size: 1rem; color: #61758a; background-color: #f0f5f9; height: 4rem; padding: 0 1rem; border-radius: 1rem;">
<div style="display: flex;">
<i class="ri-home-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../start.livemd">首页</a>
</div>
<div style="display: flex;">
<i class="ri-bug-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="https://github.com/DockYard-Academy/curriculum/issues/new?assignees=&labels=&template=issue.md&title=Games: Guessing Game">报告问题</a>
</div>
<div style="display: flex;">
<i class="ri-arrow-left-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../exercises/games.livemd">游戏项目</a>
</div>
<div style="display: flex;">
<a style="display: flex; color: #61758a; margin-right: 1rem;" href="../exercises/games_rock_paper_scissors.livemd">游戏：石头剪刀布</a>
<i class="ri-arrow-right-fill"></i>
</div>
</div>

## 游戏：猜数字游戏

在你现有的 [Games](./games.livemd) 项目中，你将创建一个数字猜测游戏，通过命令行接受用户输入。

你应该能够通过在命令行中从 `game` 文件夹运行以下命令来启动你的项目。

```
iex -S mix
```

然后你可以使用 `Games.GuessingGame` 模块开始游戏。

`Games.GuessingGame` 应该提示用户猜一个介于 `1` 和 `10` 之间的数字。

<!-- livebook:{"force_markdown":true} -->

```elixir
iex> Games.GuessingGame.play()
猜一个介于 1 和 10 之间的数字：
```

如果猜测正确，返回获胜消息。

<!-- livebook:{"force_markdown":true} -->

```elixir
猜一个介于 1 和 10 之间的数字：10
你赢了！
```

如果猜测不正确，返回失败消息。

<!-- livebook:{"force_markdown":true} -->

```elixir
猜一个介于 1 和 10 之间的数字：1
不正确！
```

<!-- livebook:{"break_markdown":true} -->

### 奖励：重新尝试

如果猜测不正确，重新提示用户输入另一个猜测，直到他们成功。这比你想象的要难！有关更多信息，请参见未来的课程 [递归](../reading/recursion.livemd)。

<!-- livebook:{"force_markdown":true} -->

```elixir
输入你的猜测：10
不正确！
输入你的猜测：5
不正确！
输入你的猜测：7
正确！
```

<!-- livebook:{"break_markdown":true} -->

### 奖励：高或低！

如果猜测太高或太低，给用户提供有用的反馈。

<!-- livebook:{"force_markdown":true} -->

```elixir
输入你的猜测：10
太高了！
输入你的猜测：5
太低了！
输入你的猜测：7
正确！
```

<!-- livebook:{"break_markdown":true} -->

### 限制尝试次数

给用户 5 次机会来猜测答案。如果他们没有猜对答案，打印失败消息并结束游戏。

<!-- livebook:{"force_markdown":true} -->

```elixir
输入你的猜测：10
太高了！
输入你的猜测：9
太高了！
输入你的猜测：8
太高了！
输入你的猜测：7
太高了！
输入你的猜测：6
太高了！
输入你的猜测：5
你输了！答案是 4
iex> 
```

## 提交你的进度

DockYard Academy 现在建议你使用最新的 [Release](https://github.com/DockYard-Academy/curriculum/releases)，而不是分叉或克隆我们的仓库。

运行 `git status` 以确保没有不必要的更改。
然后在命令行中从 `curriculum` 文件夹运行以下命令以提交你的进度。

```
$ git add .
$ git commit -m "完成游戏：猜数字游戏练习"
$ git push
```

我们自豪地提供我们的开源课程，供任何人免费学习，按照自己的节奏进行。

我们还提供一个付费课程，你可以在同伴的陪伴下向讲师学习。
我们将很快接受 2023 年 6 月至 8 月的课程申请。

## 导航

<div style="display: flex; align-items: center; width: 100%; justify-content: space-between; font-size: 1rem; color: #61758a; background-color: #f0f5f9; height: 4rem; padding: 0 1rem; border-radius: 1rem;">
<div style="display: flex;">
<i class="ri-home-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../start.livemd">首页</a>
</div>
<div style="display: flex;">
<i class="ri-bug-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="https://github.com/DockYard-Academy/curriculum/issues/new?assignees=&labels=&template=issue.md&title=Games: Guessing Game">报告问题</a>
</div>
<div style="display: flex;">
<i class="ri-arrow-left-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../exercises/games.livemd">游戏项目</a>
</div>
<div style="display: flex;">
<a style="display: flex; color: #61758a; margin-right: 1rem;" href="../exercises/games_rock_paper_scissors.livemd">游戏：石头剪刀布</a>
<i class="ri-arrow-right-fill"></i>
</div>
</div>