# 命名数字

```elixir
Mix.install([
  {:jason, "~> 1.4"},
  {:kino, "~> 0.9", override: true},
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"}
])
```

## 导航

<div style="display: flex; align-items: center; width: 100%; justify-content: space-between; font-size: 1rem; color: #61758a; background-color: #f0f5f9; height: 4rem; padding: 0 1rem; border-radius: 1rem;">
<div style="display: flex;">
<i class="ri-home-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../start.livemd">首页</a>
</div>
<div style="display: flex;">
<i class="ri-bug-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="https://github.com/DockYard-Academy/curriculum/issues/new?assignees=&labels=&template=issue.md&title=命名数字">报告问题</a>
</div>
<div style="display: flex;">
<i class="ri-arrow-left-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../reading/control_flow.livemd">控制流</a>
</div>
<div style="display: flex;">
<a style="display: flex; color: #61758a; margin-right: 1rem;" href="../exercises/rock_paper_scissors.livemd">石头剪子布</a>
<i class="ri-arrow-right-fill"></i>
</div>
</div>

## 命名数字

在下面的 Elixir 单元中，创建一个函数 `naming_numbers`，该函数接受一个单数字整数并返回其字符串表示。因此，`1` 将变为 `"one"`。

<!-- livebook:{"break_markdown":true} -->

```mermaid
flowchart
   0 --> zero
   1 --> one
   2 --> two
   3 --> three
   4 --> four
   5 --> five
   6 --> six
   7 --> seven
   8 --> eight
   9 --> nine
```

<!-- livebook:{"break_markdown":true} -->

<!-- livebook:{"force_markdown":true} -->

```elixir
naming_numbers.(1)
"one"
```

<details style="background-color: lightgreen; padding: 1rem; margin: 1rem 0;">
  <summary>解决示例</summary>

  ```elixir
  naming_numbers = fn integer ->
    case integer do
      0 -> "zero"
      1 -> "one"
      2 -> "two"
      3 -> "three"
      4 -> "four"
      5 -> "five"
      6 -> "six"
      7 -> "seven"
      8 -> "eight"
      9 -> "nine"
    end
  end
  ```
</details>

在下面输入你的解决方案。

```elixir

```

## 编号名称

在下面的 Elixir 单元中，创建一个函数 `numbering_names`，该函数接受一个数字的名称并返回其字符串表示。因此，`"one"` 将变为 `1`。

除了接受小写名称外，还要接受大写名称，因此 `"One"` 将变为 `1`。

<!-- livebook:{"break_markdown":true} -->

```mermaid
flowchart
  zero --> 0
  one --> 1
  two --> 2
  three --> 3
  four --> 4
  five --> 5
  six --> 6
  seven --> 7
  eight --> 8
  nine --> 9
```

```mermaid
flowchart
  Zero --> 0
  One --> 1
  Two --> 2
  Three --> 3
  Four --> 4
  Five --> 5
  Six --> 6
  Seven --> 7
  Eight --> 8
  Nine --> 9
```

<!-- livebook:{"break_markdown":true} -->

<details style="background-color: lightgreen; padding: 1rem; margin: 1rem 0;">
  <summary>解决示例</summary>

  我们可以使用 case 进行暴力破解解决方案。

  ```elixir
  numbering_names = fn int_str ->
    case int_str do
      "zero" -> 0
      "one" -> 1
      "two" -> 2
      "three" -> 3
      "four" -> 4
      "five" -> 5
      "six" -> 6
      "seven" -> 7
      "eight" -> 8
      "nine" -> 9
      "Zero" -> 0
      "One" -> 1
      "Two" -> 2
      "Three" -> 3
      "Four" -> 4
      "Five" -> 5
      "Six" -> 6
      "Seven" -> 7
      "Eight" -> 8
      "Nine" -> 9
    end
  end
  ```

  或者使用 [String.downcase/2](https://hexdocs.pm/elixir/String.html#downcase/2) 使解决方案更简洁。
  这还有处理混合大小写（如 `"ZeRO"`）的额外好处。

  ```elixir
  numbering_names = fn int_str ->
    case String.downcase(int_str) do
      "zero" -> 0
      "one" -> 1
      "two" -> 2
      "three" -> 3
      "four" -> 4
      "five" -> 5
      "six" -> 6
      "seven" -> 7
      "eight" -> 8
      "nine" -> 9
    end
  end
  ```
</details>

```elixir

```

## 提交你的进度

DockYard Academy 现在建议你使用最新的 [Release](https://github.com/DockYard-Academy/curriculum/releases)，而不是分叉或克隆我们的仓库。

运行 `git status` 以确保没有不必要的更改。
然后在 `curriculum` 文件夹中从命令行运行以下命令以提交你的进度。

```
$ git add .
$ git commit -m "完成命名数字练习"
$ git push
```

我们自豪地提供我们的开源课程，供任何人免费学习，按自己的节奏进行。

我们还提供付费课程，你可以在同伴的陪伴下向讲师学习。
我们将很快接受 2023 年 6 月至 8 月的课程申请。

## 导航

<div style="display: flex; align-items: center; width: 100%; justify-content: space-between; font-size: 1rem; color: #61758a; background-color: #f0f5f9; height: 4rem; padding: 0 1rem; border-radius: 1rem;">
<div style="display: flex;">
<i class="ri-home-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../start.livemd">首页</a>
</div>
<div style="display: flex;">
<i class="ri-bug-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="https://github.com/DockYard-Academy/curriculum/issues/new?assignees=&labels=&template=issue.md&title=命名数字">报告问题</a>
</div>
<div style="display: flex;">
<i class="ri-arrow-left-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../reading/control_flow.livemd">控制流</a>
</div>
<div style="display: flex;">
<a style="display: flex; color: #61758a; margin-right: 1rem;" href="../exercises/rock_paper_scissors.livemd">石头剪子布</a>
<i class="ri-arrow-right-fill"></i>
</div>
</div>
