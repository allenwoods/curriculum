# 电话号码解析

```elixir
Mix.install([
  {:jason, "~> 1.4"},
  {:kino, "~> 0.9", override: true},
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"}
])
```

## 导航

<div style="display: flex; align-items: center; width: 100%; justify-content: space-between; font-size: 1rem; color: #61758a; background-color: #f0f5f9; height: 4rem; padding: 0 1rem; border-radius: 1rem;">
<div style="display: flex;">
<i class="ri-home-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../start.livemd">首页</a>
</div>
<div style="display: flex;">
<i class="ri-bug-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="https://github.com/DockYard-Academy/curriculum/issues/new?assignees=&labels=&template=issue.md&title=Phone Number Parsing">报告问题</a>
</div>
<div style="display: flex;">
<i class="ri-arrow-left-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../exercises/rollable_expressions.livemd">可滚动表达式</a>
</div>
<div style="display: flex;">
<a style="display: flex; color: #61758a; margin-right: 1rem;" href="../reading/recursion.livemd">递归</a>
<i class="ri-arrow-right-fill"></i>
</div>
</div>

## 电话号码解析

您已经获得了一大串电话号码。问题是，每个电话号码都不遵循标准格式。

您被要求将它们从非标准格式转换为标准格式。

电话号码将以以下格式给出：

* `1231231234`
* `123 123 1234`
* `(123)-123-1234`
* `(123) 123 1234`
* `(123)123-1234`

您需要将它们转换为格式 `123-123-1234`。

<!-- livebook:{"force_markdown":true} -->

```elixir
text = """
1231231234
123 123 1234
(123)-123-1234
(123) 123 1234
(123)123-1234
"""
PhoneNumber.parse(text)
"""
123-123-1234
123-123-1234
123-123-1234
123-123-1234
123-123-1234
"""
```

<details style="background-color: burlywood; padding: 1rem; margin: 1rem 0;">
<summary>提示</summary>

考虑使用带有数字和捕获组的正则表达式来替换字符串中的电话号码表达式。

您可以一次替换一个表达式，而不是一次替换所有表达式。

</details>

<details style="background-color: lightgreen; padding: 1rem; margin: 1rem 0;">
<summary>示例解决方案</summary>

```elixir
defmodule PhoneNumber
  def parse(string) do
    replacement = "\\1-\\2-\\3"

    string
    |> String.replace(~r/(\d{3})(\d{3})(\d{4})/, replacement)
    |> String.replace(~r/(\d{3}) (\d{3}) (\d{4})/, replacement)
    |> String.replace(~r/\((\d{3})\)-(\d{3})-(\d{4})/, replacement)
    |> String.replace(~r/\((\d{3})\) (\d{3}) (\d{4})/, replacement)
    |> String.replace(~r/\((\d{3})\)(\d{3})-(\d{4})/, replacement)
  end
end
```

</details>

实现 `PhoneNumber` 模块，如下所述。

```elixir
defmodule PhoneNumber do
  @moduledoc """
  Documentation for `PhoneNumber`
  """

  @doc """
  解析电话号码并将其转换为 XXX-XXX-XXXX 格式。

  ## 示例

    iex> PhoneNumber.parse("1231231234")
    "123-123-1234"

    iex> PhoneNumber.parse("123 123 1234")
    "123-123-1234"

    iex> PhoneNumber.parse("(123)-123-1234")
    "123-123-1234"

    iex> PhoneNumber.parse("(123) 123 1234")
    "123-123-1234"

    iex> PhoneNumber.parse("(123)123-1234")
    "123-123-1234"

    iex> PhoneNumber.parse("1231231234 4564564567")
    "123-123-1234 456-456-4567"
  """
  def parse(string) do
  end
end
```

## 提交您的进度

DockYard Academy 现在建议您使用最新的 [Release](https://github.com/DockYard-Academy/curriculum/releases)，而不是分叉或克隆我们的仓库。

运行 `git status` 以确保没有不必要的更改。
然后在 `curriculum` 文件夹中从命令行运行以下命令以提交您的进度。

```
$ git add .
$ git commit -m "完成电话号码解析练习"
$ git push
```

我们自豪地提供我们的开源课程，供任何人免费学习，按照自己的节奏进行。

我们还提供付费课程，您可以在同伴的陪伴下向讲师学习。
我们将很快接受 2023 年 6 月至 8 月的课程申请。

## 导航

<div style="display: flex; align-items: center; width: 100%; justify-content: space-between; font-size: 1rem; color: #61758a; background-color: #f0f5f9; height: 4rem; padding: 0 1rem; border-radius: 1rem;">
<div style="display: flex;">
<i class="ri-home-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../start.livemd">首页</a>
</div>
<div style="display: flex;">
<i class="ri-bug-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="https://github.com/DockYard-Academy/curriculum/issues/new?assignees=&labels=&template=issue.md&title=Phone Number Parsing">报告问题</a>
</div>
<div style="display: flex;">
<i class="ri-arrow-left-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../exercises/rollable_expressions.livemd">可滚动表达式</a>
</div>
<div style="display: flex;">
<a style="display: flex; color: #61758a; margin-right: 1rem;" href="../reading/recursion.livemd">递归</a>
<i class="ri-arrow-right-fill"></i>
</div>
</div>